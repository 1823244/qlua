Settings = {        Name = "xLinRegP",        period = 182,        deviation=2,        barsshift=0,		showSigmaLines = 1,		showExtraLines = 1,        line=        {                {                        Name = "Low",                        Color = RGB(128, 0, 255),                        Type = TYPE_LINE,                        Width = 2                },                {                        Name = "Hi",                        Color = RGB(128,0,64),                        Type = TYPE_LINE,                        Width = 2                },               {                        Name = "Low-0.5",                        Color = RGB(128, 0, 255),                        Type = TYPE_LINE,                        Width = 1                },                {                        Name = "Hi+0.5",                        Color = RGB(128,0,64),                        Type = TYPE_LINE,                        Width = 1                },               {                        Name = "Low-1",                        Color = RGB(128, 0, 255),                        Type = TYPE_LINE,                        Width = 1                },                {                        Name = "Hi+1",                        Color = RGB(128,0,64),                        Type = TYPE_LINE,                        Width = 1                },               {                        Name = "xLinRegP",                        Color = RGB(96, 128,96),                        Type = TYPE_LINE,                        Width = 2                }                }}------------------------------------------------------------------------------------------------------------------------------------------------------------------------------function cached_FF()        local AMA={}        local CC={}        local II2 = 0        local II4 = 0                        return function(ind, _p,_ddd, _bs, _ss, _se)                local period = _p                local index = ind                local barsshift = _bs                local showSigmaLines = _ss                local showExtraLines = _se                               local vol = 0                        local sigma = 0                local sigma2 = 0                local sigma3 = 0                local sigma4 = 0                local aav = 0                local aa = 0                local bb = 0                local cc = 0                local ZZZ = 0                local ttt = 0                                                                if index == 1 then                                                AMA={}                               CC={}						if CandleExist(index) then							CC[index]=(C(index)+H(index)+L(index))/3               							AMA[index]=(C(index)+O(index))/2						else 							CC[index]=0              							AMA[index]=0						end                                                 II2=0                                II4=0                        for i = 0, period-1 do                                ttt=(-(period-1)/2+i)^2                                II2=II2+ttt                                II4=II4+ttt^2                        end                                        return nil                end                				if index <= period or not CandleExist(index) then					CC[index] = CC[index-1] 					AMA[index] = AMA[index-1]					return nil				end               ------------------------------                               AMA[index]=AMA[index-1]               ----------------------------------               CC[index]=(C(index)+H(index)+L(index))/3               ---------------------                                         if index < (Size()-2 - barsshift) then return nil end                if index > (Size() - barsshift) then return nil end                                ----------------------------------------------------                sigma=0                sigma2=0                sigma3=0                sigma4=0                aav=0                ZZZ=0                for i = 0, period-1 do				                        ZZZ=CC[index+i-period+1]                                                aav=aav+ZZZ                        sigma=sigma+ZZZ*(-(period-1)/2+i)                        ttt=(-(period-1)/2+i)^2                        sigma3=sigma3+ZZZ*ttt						                end                                ------------------------        bb=sigma/II2		cc=(sigma3-aav*II2/period)/(II4-II2*II2/period)        aa=(aav-cc*II2)/period        aav=aav/period                        AMA[index]=aa+bb*((period-1)/2)+cc*((period-1)/2)^2             ------- парабола        -------------------------------                                sigma=0                sigma2=0                sigma3 = 0				                for i = 0, period-1 do                        ZZZ=CC[index+i-period+1] or 0                        sigma2=aa+bb*(-(period-1)/2+i)+cc*(-(period-1)/2+i)^2           ------- парабола                        sigma=sigma+(ZZZ-sigma2)^2                end               			   sigma=(sigma/period)^(1/2)				                                 for i = 1, period-1 do                        ZZZ=aa+bb*(-(period-1)/2+i)+cc*(-(period-1)/2+i)^2                        SetValue(index+i-period+1, 7, ZZZ)						if showSigmaLines == 1 then							SetValue(index+i-period+1, 2, ZZZ+sigma*_ddd)							SetValue(index+i-period+1, 1, ZZZ-sigma*_ddd)                        end						if showExtraLines == 1 and showSigmaLines then							SetValue(index+i-period+1, 4, ZZZ+sigma*(_ddd+0.5))							SetValue(index+i-period+1, 3, ZZZ-sigma*(_ddd+0.5))							SetValue(index+i-period+1, 6, ZZZ+sigma*(_ddd+1))							SetValue(index+i-period+1, 5, ZZZ-sigma*(_ddd+1))						end                end                     				SetValue(index+0-period+1, 7, nil)								if showSigmaLines == 1 then									SetValue(index+0-period+1, 2, nil)					SetValue(index+0-period+1, 1, nil)                end 										if showExtraLines == 1 then					SetValue(index+0-period+1, 4, nil)					SetValue(index+0-period+1, 3, nil)					SetValue(index+0-period+1, 6, nil)					SetValue(index+0-period+1, 5, nil)				end                        ----------------------------------				if showSigmaLines == 1 then					if showExtraLines == 1 then						return AMA[index]-sigma*_ddd, AMA[index]+sigma*_ddd, AMA[index]-sigma*(_ddd+0.5), AMA[index]+sigma*(_ddd+0.5), AMA[index]-sigma*(_ddd+1), AMA[index]+sigma*(_ddd+1), AMA[index]					else                                        						return AMA[index]-sigma*_ddd, AMA[index]+sigma*_ddd, nil, nil, nil, nil, AMA[index]					end				else					return nil, nil, nil, nil, nil, nil, AMA[index]				end                                 endend----------------------------    ----------------------------    --------------------------------------------------------    ----------------------------    --------------------------------------------------------    ----------------------------    ----------------------------function Init()        myFF = cached_FF()        return #Settings.lineendfunction OnCalculate(index)                return myFF(index, Settings.period,Settings.deviation, Settings.barsshift, Settings.showSigmaLines, Settings.showExtraLines)                        end